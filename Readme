
Student: P. Serna Torre
Professor: Michael R. Davidson.


---------------HOW TO EXECUTE THE CODE---------------------------------------

Follow these steps to run the Optimal Power Flow successfully:

1) Download the folders: Input data, Source Code, Results. Save all the folders inside another one, for example "SernaTorre_project".

2) Go to the folder ``Source code''. Open the file ``directory paths.csv". In the column 3, modify the first row "Main folder name" according to the path where the folder Source Code, Input data, and Results are located. For example: /home/paul/Documents/SernaTorre_project

3) Go to the folder ``Input data". Modify all the information according to the characteristics and parameters of the power system you want to run. All the files have the format ERCOT 120-bus 500kV system.

4) Open a Julia terminal from the folder "Source code". Execute the command include >include("Lossy DC PowerFlow with BESS.jl"). See the example:

	paul@paul-Inspiron-15-5510:~/Documents/SernaTorre_project/Source code$ julia
               _
   _       _ _(_)_     |  Documentation: https://docs.julialang.org
  (_)     | (_) (_)    |
   _ _   _| |_  __ _   |  Type "?" for help, "]?" for Pkg help.
  | | | | | | |/ _` |  |
  | | |_| | | | (_| |  |  Version 1.6.3 (2021-09-23)
 _/ |\__'_|_|_|\__'_|  |  Official https://julialang.org/ release
|__/                   |

	julia> include("Lossy DC PowerFlow with BESS.jl")


5) After the execution, files (.csv) and plots (.pdf) are created automatically and saved inside the folder ``Results". These files contain the optimal solution.

****Warning: The source code was created under Ubuntu Linux 20.04. Therefore, the source code ``Lossy DC PowerFlow with BESS.jl" has commands that call other files by using the format of directory paths under Linux format. For example, in Linux, the directory paths have /.../, but in Windows is \\ .... \\. Please, contact psernatorre@ucsd.edu in case there is some issues. For any contribution: https://github.com/psernatorre/Lossy-DCOPF-with-an-accurate-modelling-of-Li-Ion-batteries.git

****Warning: The code was implemented in Julia 1.6.3
****Warning: Install CPLEX previously.


---------------DESCRIPTION OF THE INPUT FILE configuration.csv---------------------------------------

The file configuration.csv allows to configure the main parameters of the model.

Parameter	   Value
Start_case_day	   (Write the date from you get the timeseries data)
Final_of_case	   Write the date from you get the timeseries data)
Date_format	   mm/dd/yyyy
Resolution	   (Minutes per period. For example: 60)
Price_P_shed (Dolar/kWh)	(Price of power shedding. For example: 8000)
CPLEX tolerance	(Tolerance of the MILP problem. For example: 1E-05)
CPLEX cores	        (Number of cores you want to use to run to your code. For example: 20)
MVA base	        100
Max_digits_CSVfiles	3
Max_iteration_losses	(Maximum number of iterations of the lossy iterative algorithm. For example: 10)
Tolerance_losses	0.15
Bess_modeling(0:traditional_1:accurate)	 (Write 0:traditional BESS modeling, or 1:accurate BESS modeling)
Losses_modeling(0:cos_1:rf2)	(Write 0:The losses are calculated by cosines, or 1:The losses are calculated by the formula rF^2)
Stopping_criteria(0:losses_1:gen)	(Write 0:The stopping criteria of the lossy iterative algorithm is the total ohmic losses, or 1:The stopping criteria is the maximum generation)





